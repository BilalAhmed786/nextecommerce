
generator client {
  provider = "prisma-client-js"
  
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String?
  email     String   @unique
  password  String
  role      Role     @default(CUSTOMER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  orders    Order[]
  cartItems CartItem[]
  addresses Address[]
}

model Product {
  id          String    @id @default(cuid())
  name        String
  description String?
  price       Float
  stock       Int
  image       String
  category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relations
  orderItems  OrderItem[]
  cartItems   CartItem[]
  images      ProductImage[]  
}

model ProductImage {
  id        String   @id @default(cuid())
  url       String
  alt       String?
  product   Product  @relation(fields: [productId], references: [id],onDelete:Cascade)
  productId String
  
}

model Category {
  id       String    @id @default(cuid())
  name     String    @unique
  products Product[]
}

model Order {
  id         String      @id @default(cuid())
  user       User?        @relation(fields: [userId], references: [id])
  userId     String?
  total      Float
  status     OrderStatus @default(PENDING)
  createdAt  DateTime    @default(now())
  address    Address   @relation(fields: [addressId], references: [id])
  addressId  String
  
  //relation
  orderItems OrderItem[]
}
//many to many relation b/w order and product
model OrderItem {
  id        String   @id @default(cuid())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  price     Float
}

model CartItem {
  id        String   @id @default(cuid())
  user      User?     @relation(fields: [userId], references: [id])
  userId    String?
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
}

model Address {
  id         String   @id @default(cuid())
  user       User?     @relation(fields: [userId], references: [id])
  userId     String?
  street     String
  city       String
  state      String
  postalCode String
  country    String
  isDefault  Boolean  @default(false)
  orders Order[]
}

enum Role {
  ADMIN
  CUSTOMER
}

enum OrderStatus {
  PENDING
  SHIPPED
  DELIVERED
  CANCELLED
}